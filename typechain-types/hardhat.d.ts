/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { ethers } from "ethers";
import {
  FactoryOptions,
  HardhatEthersHelpers as HardhatEthersHelpersBase,
} from "@nomiclabs/hardhat-ethers/types";

import * as Contracts from ".";

declare module "hardhat/types/runtime" {
  interface HardhatEthersHelpers extends HardhatEthersHelpersBase {
    getContractFactory(
      name: "ERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20__factory>;
    getContractFactory(
      name: "IERC20Metadata",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20Metadata__factory>;
    getContractFactory(
      name: "IERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20__factory>;
    getContractFactory(
      name: "ERC165",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC165__factory>;
    getContractFactory(
      name: "ERC165Storage",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC165Storage__factory>;
    getContractFactory(
      name: "IERC165",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC165__factory>;
    getContractFactory(
      name: "AbstractGammaPoolFactory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AbstractGammaPoolFactory__factory>;
    getContractFactory(
      name: "GammaPool",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.GammaPool__factory>;
    getContractFactory(
      name: "GammaPoolERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.GammaPoolERC20__factory>;
    getContractFactory(
      name: "GammaPoolERC4626",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.GammaPoolERC4626__factory>;
    getContractFactory(
      name: "GammaPoolExternal",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.GammaPoolExternal__factory>;
    getContractFactory(
      name: "PoolViewer",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PoolViewer__factory>;
    getContractFactory(
      name: "Refunds",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Refunds__factory>;
    getContractFactory(
      name: "GammaPoolFactory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.GammaPoolFactory__factory>;
    getContractFactory(
      name: "IGammaPool",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IGammaPool__factory>;
    getContractFactory(
      name: "IGammaPoolEvents",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IGammaPoolEvents__factory>;
    getContractFactory(
      name: "IGammaPoolExternal",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IGammaPoolExternal__factory>;
    getContractFactory(
      name: "IGammaPoolFactory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IGammaPoolFactory__factory>;
    getContractFactory(
      name: "IPausable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPausable__factory>;
    getContractFactory(
      name: "IPoolViewer",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPoolViewer__factory>;
    getContractFactory(
      name: "IRefunds",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IRefunds__factory>;
    getContractFactory(
      name: "ICollateralManager",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ICollateralManager__factory>;
    getContractFactory(
      name: "ILoanObserver",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ILoanObserver__factory>;
    getContractFactory(
      name: "ILoanObserverStore",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ILoanObserverStore__factory>;
    getContractFactory(
      name: "IExternalCallee",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IExternalCallee__factory>;
    getContractFactory(
      name: "ISendTokensCallback",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ISendTokensCallback__factory>;
    getContractFactory(
      name: "ILinearKinkedRateModel",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ILinearKinkedRateModel__factory>;
    getContractFactory(
      name: "ILogDerivativeRateModel",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ILogDerivativeRateModel__factory>;
    getContractFactory(
      name: "IRateModel",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IRateModel__factory>;
    getContractFactory(
      name: "IRateParamsStore",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IRateParamsStore__factory>;
    getContractFactory(
      name: "ILiquidationStrategy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ILiquidationStrategy__factory>;
    getContractFactory(
      name: "ILongStrategy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ILongStrategy__factory>;
    getContractFactory(
      name: "IShortStrategy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IShortStrategy__factory>;
    getContractFactory(
      name: "IExternalStrategyEvents",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IExternalStrategyEvents__factory>;
    getContractFactory(
      name: "IGammaPoolERC20Events",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IGammaPoolERC20Events__factory>;
    getContractFactory(
      name: "ILiquidationStrategyEvents",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ILiquidationStrategyEvents__factory>;
    getContractFactory(
      name: "ILongStrategyEvents",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ILongStrategyEvents__factory>;
    getContractFactory(
      name: "IShortStrategyEvents",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IShortStrategyEvents__factory>;
    getContractFactory(
      name: "IStrategyEvents",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IStrategyEvents__factory>;
    getContractFactory(
      name: "IBorrowStrategy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IBorrowStrategy__factory>;
    getContractFactory(
      name: "IRepayStrategy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IRepayStrategy__factory>;
    getContractFactory(
      name: "IBatchLiquidationStrategy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IBatchLiquidationStrategy__factory>;
    getContractFactory(
      name: "IExternalLiquidationStrategy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IExternalLiquidationStrategy__factory>;
    getContractFactory(
      name: "ISingleLiquidationStrategy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ISingleLiquidationStrategy__factory>;
    getContractFactory(
      name: "IExternalRebalanceStrategy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IExternalRebalanceStrategy__factory>;
    getContractFactory(
      name: "IRebalanceStrategy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IRebalanceStrategy__factory>;
    getContractFactory(
      name: "GammaSwapLibrary",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.GammaSwapLibrary__factory>;
    getContractFactory(
      name: "LibStorage",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.LibStorage__factory>;
    getContractFactory(
      name: "AbstractCollateralManager",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AbstractCollateralManager__factory>;
    getContractFactory(
      name: "AbstractLoanObserver",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AbstractLoanObserver__factory>;
    getContractFactory(
      name: "AbstractLoanObserverStore",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AbstractLoanObserverStore__factory>;
    getContractFactory(
      name: "AbstractRateModel",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AbstractRateModel__factory>;
    getContractFactory(
      name: "LinearKinkedRateModel",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.LinearKinkedRateModel__factory>;
    getContractFactory(
      name: "LogDerivativeRateModel",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.LogDerivativeRateModel__factory>;
    getContractFactory(
      name: "AbstractRateParamsStore",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AbstractRateParamsStore__factory>;
    getContractFactory(
      name: "AppStorage",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AppStorage__factory>;
    getContractFactory(
      name: "BaseBorrowStrategy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BaseBorrowStrategy__factory>;
    getContractFactory(
      name: "BaseExternalStrategy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BaseExternalStrategy__factory>;
    getContractFactory(
      name: "BaseLiquidationStrategy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BaseLiquidationStrategy__factory>;
    getContractFactory(
      name: "BaseLongStrategy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BaseLongStrategy__factory>;
    getContractFactory(
      name: "BaseRebalanceStrategy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BaseRebalanceStrategy__factory>;
    getContractFactory(
      name: "BaseRepayStrategy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BaseRepayStrategy__factory>;
    getContractFactory(
      name: "BaseStrategy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BaseStrategy__factory>;
    getContractFactory(
      name: "BorrowStrategy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BorrowStrategy__factory>;
    getContractFactory(
      name: "RepayStrategy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.RepayStrategy__factory>;
    getContractFactory(
      name: "BatchLiquidationStrategy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BatchLiquidationStrategy__factory>;
    getContractFactory(
      name: "ExternalLiquidationStrategy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ExternalLiquidationStrategy__factory>;
    getContractFactory(
      name: "SingleLiquidationStrategy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SingleLiquidationStrategy__factory>;
    getContractFactory(
      name: "ExternalRebalanceStrategy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ExternalRebalanceStrategy__factory>;
    getContractFactory(
      name: "RebalanceStrategy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.RebalanceStrategy__factory>;
    getContractFactory(
      name: "ShortStrategy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ShortStrategy__factory>;
    getContractFactory(
      name: "ShortStrategyERC4626",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ShortStrategyERC4626__factory>;
    getContractFactory(
      name: "ShortStrategySync",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ShortStrategySync__factory>;
    getContractFactory(
      name: "ERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20__factory>;
    getContractFactory(
      name: "FaucetERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.FaucetERC20__factory>;
    getContractFactory(
      name: "TestLinearKinkedRateModel",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TestLinearKinkedRateModel__factory>;
    getContractFactory(
      name: "TestLogDerivativeRateModel",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TestLogDerivativeRateModel__factory>;
    getContractFactory(
      name: "TestBaseShortStrategy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TestBaseShortStrategy__factory>;
    getContractFactory(
      name: "TestBaseStrategy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TestBaseStrategy__factory>;
    getContractFactory(
      name: "TestBorrowStrategy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TestBorrowStrategy__factory>;
    getContractFactory(
      name: "TestLiquidationStrategy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TestLiquidationStrategy__factory>;
    getContractFactory(
      name: "TestLongStrategy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TestLongStrategy__factory>;
    getContractFactory(
      name: "TestRebalanceStrategy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TestRebalanceStrategy__factory>;
    getContractFactory(
      name: "TestRepayStrategy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TestRepayStrategy__factory>;
    getContractFactory(
      name: "TestShortStrategy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TestShortStrategy__factory>;
    getContractFactory(
      name: "TestShortStrategyERC4626",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TestShortStrategyERC4626__factory>;
    getContractFactory(
      name: "TestShortStrategySync",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TestShortStrategySync__factory>;
    getContractFactory(
      name: "TestExternalBaseRebalanceStrategy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TestExternalBaseRebalanceStrategy__factory>;
    getContractFactory(
      name: "TestExternalBaseStrategy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TestExternalBaseStrategy__factory>;
    getContractFactory(
      name: "TestExternalCallee",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TestExternalCallee__factory>;
    getContractFactory(
      name: "TestExternalCallee2",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TestExternalCallee2__factory>;
    getContractFactory(
      name: "TestExternalCalleeEmpty",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TestExternalCalleeEmpty__factory>;
    getContractFactory(
      name: "TestExternalLiquidationStrategy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TestExternalLiquidationStrategy__factory>;
    getContractFactory(
      name: "TestExternalRebalanceStrategy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TestExternalRebalanceStrategy__factory>;
    getContractFactory(
      name: "TestBorrowStrategy2",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TestBorrowStrategy2__factory>;
    getContractFactory(
      name: "TestERC20Strategy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TestERC20Strategy__factory>;
    getContractFactory(
      name: "TestLiquidationStrategy2",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TestLiquidationStrategy2__factory>;
    getContractFactory(
      name: "TestRebalanceStrategy2",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TestRebalanceStrategy2__factory>;
    getContractFactory(
      name: "TestRepayStrategy2",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TestRepayStrategy2__factory>;
    getContractFactory(
      name: "TestShortStrategy2",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TestShortStrategy2__factory>;
    getContractFactory(
      name: "TestAddressCalculator",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TestAddressCalculator__factory>;
    getContractFactory(
      name: "TestCFMM",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TestCFMM__factory>;
    getContractFactory(
      name: "TestCFMM2",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TestCFMM2__factory>;
    getContractFactory(
      name: "TestCollateralManager",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TestCollateralManager__factory>;
    getContractFactory(
      name: "TestERC165",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TestERC165__factory>;
    getContractFactory(
      name: "TestERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TestERC20__factory>;
    getContractFactory(
      name: "TestERC20b",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TestERC20b__factory>;
    getContractFactory(
      name: "TestERC20WithFee",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TestERC20WithFee__factory>;
    getContractFactory(
      name: "TestGammaPool",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TestGammaPool__factory>;
    getContractFactory(
      name: "TestGammaPoolExternal",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TestGammaPoolExternal__factory>;
    getContractFactory(
      name: "TestGammaPoolFactory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TestGammaPoolFactory__factory>;
    getContractFactory(
      name: "TestGammaPoolFactory2",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TestGammaPoolFactory2__factory>;
    getContractFactory(
      name: "TestLoanObserver",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TestLoanObserver__factory>;
    getContractFactory(
      name: "TestLoanObserverStore",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TestLoanObserverStore__factory>;
    getContractFactory(
      name: "TestPoolViewer",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TestPoolViewer__factory>;
    getContractFactory(
      name: "TestPositionManager",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TestPositionManager__factory>;
    getContractFactory(
      name: "TestRateModel",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TestRateModel__factory>;
    getContractFactory(
      name: "TestRateParamsStore",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TestRateParamsStore__factory>;
    getContractFactory(
      name: "Pausable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Pausable__factory>;
    getContractFactory(
      name: "TwoStepOwnable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TwoStepOwnable__factory>;

    getContractAt(
      name: "ERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20>;
    getContractAt(
      name: "IERC20Metadata",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20Metadata>;
    getContractAt(
      name: "IERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20>;
    getContractAt(
      name: "ERC165",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC165>;
    getContractAt(
      name: "ERC165Storage",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC165Storage>;
    getContractAt(
      name: "IERC165",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC165>;
    getContractAt(
      name: "AbstractGammaPoolFactory",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.AbstractGammaPoolFactory>;
    getContractAt(
      name: "GammaPool",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.GammaPool>;
    getContractAt(
      name: "GammaPoolERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.GammaPoolERC20>;
    getContractAt(
      name: "GammaPoolERC4626",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.GammaPoolERC4626>;
    getContractAt(
      name: "GammaPoolExternal",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.GammaPoolExternal>;
    getContractAt(
      name: "PoolViewer",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.PoolViewer>;
    getContractAt(
      name: "Refunds",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Refunds>;
    getContractAt(
      name: "GammaPoolFactory",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.GammaPoolFactory>;
    getContractAt(
      name: "IGammaPool",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IGammaPool>;
    getContractAt(
      name: "IGammaPoolEvents",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IGammaPoolEvents>;
    getContractAt(
      name: "IGammaPoolExternal",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IGammaPoolExternal>;
    getContractAt(
      name: "IGammaPoolFactory",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IGammaPoolFactory>;
    getContractAt(
      name: "IPausable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IPausable>;
    getContractAt(
      name: "IPoolViewer",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IPoolViewer>;
    getContractAt(
      name: "IRefunds",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IRefunds>;
    getContractAt(
      name: "ICollateralManager",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ICollateralManager>;
    getContractAt(
      name: "ILoanObserver",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ILoanObserver>;
    getContractAt(
      name: "ILoanObserverStore",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ILoanObserverStore>;
    getContractAt(
      name: "IExternalCallee",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IExternalCallee>;
    getContractAt(
      name: "ISendTokensCallback",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ISendTokensCallback>;
    getContractAt(
      name: "ILinearKinkedRateModel",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ILinearKinkedRateModel>;
    getContractAt(
      name: "ILogDerivativeRateModel",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ILogDerivativeRateModel>;
    getContractAt(
      name: "IRateModel",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IRateModel>;
    getContractAt(
      name: "IRateParamsStore",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IRateParamsStore>;
    getContractAt(
      name: "ILiquidationStrategy",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ILiquidationStrategy>;
    getContractAt(
      name: "ILongStrategy",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ILongStrategy>;
    getContractAt(
      name: "IShortStrategy",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IShortStrategy>;
    getContractAt(
      name: "IExternalStrategyEvents",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IExternalStrategyEvents>;
    getContractAt(
      name: "IGammaPoolERC20Events",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IGammaPoolERC20Events>;
    getContractAt(
      name: "ILiquidationStrategyEvents",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ILiquidationStrategyEvents>;
    getContractAt(
      name: "ILongStrategyEvents",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ILongStrategyEvents>;
    getContractAt(
      name: "IShortStrategyEvents",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IShortStrategyEvents>;
    getContractAt(
      name: "IStrategyEvents",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IStrategyEvents>;
    getContractAt(
      name: "IBorrowStrategy",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IBorrowStrategy>;
    getContractAt(
      name: "IRepayStrategy",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IRepayStrategy>;
    getContractAt(
      name: "IBatchLiquidationStrategy",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IBatchLiquidationStrategy>;
    getContractAt(
      name: "IExternalLiquidationStrategy",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IExternalLiquidationStrategy>;
    getContractAt(
      name: "ISingleLiquidationStrategy",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ISingleLiquidationStrategy>;
    getContractAt(
      name: "IExternalRebalanceStrategy",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IExternalRebalanceStrategy>;
    getContractAt(
      name: "IRebalanceStrategy",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IRebalanceStrategy>;
    getContractAt(
      name: "GammaSwapLibrary",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.GammaSwapLibrary>;
    getContractAt(
      name: "LibStorage",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.LibStorage>;
    getContractAt(
      name: "AbstractCollateralManager",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.AbstractCollateralManager>;
    getContractAt(
      name: "AbstractLoanObserver",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.AbstractLoanObserver>;
    getContractAt(
      name: "AbstractLoanObserverStore",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.AbstractLoanObserverStore>;
    getContractAt(
      name: "AbstractRateModel",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.AbstractRateModel>;
    getContractAt(
      name: "LinearKinkedRateModel",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.LinearKinkedRateModel>;
    getContractAt(
      name: "LogDerivativeRateModel",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.LogDerivativeRateModel>;
    getContractAt(
      name: "AbstractRateParamsStore",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.AbstractRateParamsStore>;
    getContractAt(
      name: "AppStorage",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.AppStorage>;
    getContractAt(
      name: "BaseBorrowStrategy",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.BaseBorrowStrategy>;
    getContractAt(
      name: "BaseExternalStrategy",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.BaseExternalStrategy>;
    getContractAt(
      name: "BaseLiquidationStrategy",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.BaseLiquidationStrategy>;
    getContractAt(
      name: "BaseLongStrategy",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.BaseLongStrategy>;
    getContractAt(
      name: "BaseRebalanceStrategy",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.BaseRebalanceStrategy>;
    getContractAt(
      name: "BaseRepayStrategy",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.BaseRepayStrategy>;
    getContractAt(
      name: "BaseStrategy",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.BaseStrategy>;
    getContractAt(
      name: "BorrowStrategy",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.BorrowStrategy>;
    getContractAt(
      name: "RepayStrategy",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.RepayStrategy>;
    getContractAt(
      name: "BatchLiquidationStrategy",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.BatchLiquidationStrategy>;
    getContractAt(
      name: "ExternalLiquidationStrategy",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ExternalLiquidationStrategy>;
    getContractAt(
      name: "SingleLiquidationStrategy",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.SingleLiquidationStrategy>;
    getContractAt(
      name: "ExternalRebalanceStrategy",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ExternalRebalanceStrategy>;
    getContractAt(
      name: "RebalanceStrategy",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.RebalanceStrategy>;
    getContractAt(
      name: "ShortStrategy",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ShortStrategy>;
    getContractAt(
      name: "ShortStrategyERC4626",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ShortStrategyERC4626>;
    getContractAt(
      name: "ShortStrategySync",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ShortStrategySync>;
    getContractAt(
      name: "ERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20>;
    getContractAt(
      name: "FaucetERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.FaucetERC20>;
    getContractAt(
      name: "TestLinearKinkedRateModel",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TestLinearKinkedRateModel>;
    getContractAt(
      name: "TestLogDerivativeRateModel",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TestLogDerivativeRateModel>;
    getContractAt(
      name: "TestBaseShortStrategy",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TestBaseShortStrategy>;
    getContractAt(
      name: "TestBaseStrategy",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TestBaseStrategy>;
    getContractAt(
      name: "TestBorrowStrategy",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TestBorrowStrategy>;
    getContractAt(
      name: "TestLiquidationStrategy",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TestLiquidationStrategy>;
    getContractAt(
      name: "TestLongStrategy",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TestLongStrategy>;
    getContractAt(
      name: "TestRebalanceStrategy",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TestRebalanceStrategy>;
    getContractAt(
      name: "TestRepayStrategy",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TestRepayStrategy>;
    getContractAt(
      name: "TestShortStrategy",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TestShortStrategy>;
    getContractAt(
      name: "TestShortStrategyERC4626",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TestShortStrategyERC4626>;
    getContractAt(
      name: "TestShortStrategySync",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TestShortStrategySync>;
    getContractAt(
      name: "TestExternalBaseRebalanceStrategy",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TestExternalBaseRebalanceStrategy>;
    getContractAt(
      name: "TestExternalBaseStrategy",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TestExternalBaseStrategy>;
    getContractAt(
      name: "TestExternalCallee",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TestExternalCallee>;
    getContractAt(
      name: "TestExternalCallee2",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TestExternalCallee2>;
    getContractAt(
      name: "TestExternalCalleeEmpty",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TestExternalCalleeEmpty>;
    getContractAt(
      name: "TestExternalLiquidationStrategy",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TestExternalLiquidationStrategy>;
    getContractAt(
      name: "TestExternalRebalanceStrategy",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TestExternalRebalanceStrategy>;
    getContractAt(
      name: "TestBorrowStrategy2",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TestBorrowStrategy2>;
    getContractAt(
      name: "TestERC20Strategy",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TestERC20Strategy>;
    getContractAt(
      name: "TestLiquidationStrategy2",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TestLiquidationStrategy2>;
    getContractAt(
      name: "TestRebalanceStrategy2",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TestRebalanceStrategy2>;
    getContractAt(
      name: "TestRepayStrategy2",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TestRepayStrategy2>;
    getContractAt(
      name: "TestShortStrategy2",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TestShortStrategy2>;
    getContractAt(
      name: "TestAddressCalculator",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TestAddressCalculator>;
    getContractAt(
      name: "TestCFMM",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TestCFMM>;
    getContractAt(
      name: "TestCFMM2",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TestCFMM2>;
    getContractAt(
      name: "TestCollateralManager",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TestCollateralManager>;
    getContractAt(
      name: "TestERC165",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TestERC165>;
    getContractAt(
      name: "TestERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TestERC20>;
    getContractAt(
      name: "TestERC20b",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TestERC20b>;
    getContractAt(
      name: "TestERC20WithFee",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TestERC20WithFee>;
    getContractAt(
      name: "TestGammaPool",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TestGammaPool>;
    getContractAt(
      name: "TestGammaPoolExternal",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TestGammaPoolExternal>;
    getContractAt(
      name: "TestGammaPoolFactory",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TestGammaPoolFactory>;
    getContractAt(
      name: "TestGammaPoolFactory2",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TestGammaPoolFactory2>;
    getContractAt(
      name: "TestLoanObserver",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TestLoanObserver>;
    getContractAt(
      name: "TestLoanObserverStore",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TestLoanObserverStore>;
    getContractAt(
      name: "TestPoolViewer",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TestPoolViewer>;
    getContractAt(
      name: "TestPositionManager",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TestPositionManager>;
    getContractAt(
      name: "TestRateModel",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TestRateModel>;
    getContractAt(
      name: "TestRateParamsStore",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TestRateParamsStore>;
    getContractAt(
      name: "Pausable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Pausable>;
    getContractAt(
      name: "TwoStepOwnable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TwoStepOwnable>;

    // default types
    getContractFactory(
      name: string,
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<ethers.ContractFactory>;
    getContractFactory(
      abi: any[],
      bytecode: ethers.utils.BytesLike,
      signer?: ethers.Signer
    ): Promise<ethers.ContractFactory>;
    getContractAt(
      nameOrAbi: string | any[],
      address: string,
      signer?: ethers.Signer
    ): Promise<ethers.Contract>;
  }
}
