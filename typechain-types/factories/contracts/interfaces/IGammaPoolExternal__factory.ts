/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  IGammaPoolExternal,
  IGammaPoolExternalInterface,
} from "../../../contracts/interfaces/IGammaPoolExternal";

const _abi = [
  {
    inputs: [],
    name: "externalLiquidationStrategy",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "externalRebalanceStrategy",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint128[]",
        name: "amounts",
        type: "uint128[]",
      },
      {
        internalType: "uint256",
        name: "lpTokens",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "liquidateExternally",
    outputs: [
      {
        internalType: "uint256",
        name: "loanLiquidity",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "refund",
        type: "uint256[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint128[]",
        name: "amounts",
        type: "uint128[]",
      },
      {
        internalType: "uint256",
        name: "lpTokens",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "rebalanceExternally",
    outputs: [
      {
        internalType: "uint256",
        name: "loanLiquidity",
        type: "uint256",
      },
      {
        internalType: "uint128[]",
        name: "tokensHeld",
        type: "uint128[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class IGammaPoolExternal__factory {
  static readonly abi = _abi;
  static createInterface(): IGammaPoolExternalInterface {
    return new utils.Interface(_abi) as IGammaPoolExternalInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IGammaPoolExternal {
    return new Contract(address, _abi, signerOrProvider) as IGammaPoolExternal;
  }
}
