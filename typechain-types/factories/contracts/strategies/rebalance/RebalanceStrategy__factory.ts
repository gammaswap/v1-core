/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  RebalanceStrategy,
  RebalanceStrategyInterface,
} from "../../../../contracts/strategies/rebalance/RebalanceStrategy";

const _abi = [
  {
    inputs: [],
    name: "ExcessiveBurn",
    type: "error",
  },
  {
    inputs: [],
    name: "Forbidden",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidAmountsLength",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidDeltasLength",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidRatioLength",
    type: "error",
  },
  {
    inputs: [],
    name: "LoanDoesNotExist",
    type: "error",
  },
  {
    inputs: [],
    name: "Locked",
    type: "error",
  },
  {
    inputs: [],
    name: "Margin",
    type: "error",
  },
  {
    inputs: [],
    name: "MinBorrow",
    type: "error",
  },
  {
    inputs: [],
    name: "NotEnoughBalance",
    type: "error",
  },
  {
    inputs: [],
    name: "NotEnoughCollateral",
    type: "error",
  },
  {
    inputs: [],
    name: "NotEnoughLPDeposit",
    type: "error",
  },
  {
    inputs: [],
    name: "ZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "ZeroAmount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint128[]",
        name: "tokensHeld",
        type: "uint128[]",
      },
      {
        indexed: false,
        internalType: "uint128",
        name: "liquidity",
        type: "uint128",
      },
      {
        indexed: false,
        internalType: "uint128",
        name: "initLiquidity",
        type: "uint128",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "lpTokens",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint96",
        name: "rateIndex",
        type: "uint96",
      },
      {
        indexed: true,
        internalType: "enum IStrategyEvents.TX_TYPE",
        name: "txType",
        type: "uint8",
      },
    ],
    name: "LoanUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "lpTokenBalance",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "lpTokenBorrowed",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint40",
        name: "lastBlockNumber",
        type: "uint40",
      },
      {
        indexed: false,
        internalType: "uint80",
        name: "accFeeIndex",
        type: "uint80",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "lpTokenBorrowedPlusInterest",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint128",
        name: "lpInvariant",
        type: "uint128",
      },
      {
        indexed: false,
        internalType: "uint128",
        name: "borrowedInvariant",
        type: "uint128",
      },
      {
        indexed: false,
        internalType: "uint128[]",
        name: "cfmmReserves",
        type: "uint128[]",
      },
      {
        indexed: true,
        internalType: "enum IStrategyEvents.TX_TYPE",
        name: "txType",
        type: "uint8",
      },
    ],
    name: "PoolUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "int256[]",
        name: "deltas",
        type: "int256[]",
      },
      {
        internalType: "uint256[]",
        name: "ratio",
        type: "uint256[]",
      },
    ],
    name: "_rebalanceCollateral",
    outputs: [
      {
        internalType: "uint128[]",
        name: "tokensHeld",
        type: "uint128[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "_updatePool",
    outputs: [
      {
        internalType: "uint256",
        name: "loanLiquidityDebt",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "poolLiquidityDebt",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint128[]",
        name: "tokensHeld",
        type: "uint128[]",
      },
      {
        internalType: "uint128[]",
        name: "reserves",
        type: "uint128[]",
      },
      {
        internalType: "uint256[]",
        name: "ratio",
        type: "uint256[]",
      },
    ],
    name: "calcDeltasForRatio",
    outputs: [
      {
        internalType: "int256[]",
        name: "deltas",
        type: "int256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint128[]",
        name: "amounts",
        type: "uint128[]",
      },
      {
        internalType: "uint128[]",
        name: "tokensHeld",
        type: "uint128[]",
      },
      {
        internalType: "uint128[]",
        name: "reserves",
        type: "uint128[]",
      },
      {
        internalType: "uint256[]",
        name: "ratio",
        type: "uint256[]",
      },
    ],
    name: "calcDeltasForWithdrawal",
    outputs: [
      {
        internalType: "int256[]",
        name: "deltas",
        type: "int256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint128[]",
        name: "tokensHeld",
        type: "uint128[]",
      },
      {
        internalType: "uint128[]",
        name: "reserves",
        type: "uint128[]",
      },
      {
        internalType: "uint256",
        name: "liquidity",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "collateralId",
        type: "uint256",
      },
    ],
    name: "calcDeltasToClose",
    outputs: [
      {
        internalType: "int256[]",
        name: "deltas",
        type: "int256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ltvThreshold",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rateParamsStore",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "validateParameters",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

export class RebalanceStrategy__factory {
  static readonly abi = _abi;
  static createInterface(): RebalanceStrategyInterface {
    return new utils.Interface(_abi) as RebalanceStrategyInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): RebalanceStrategy {
    return new Contract(address, _abi, signerOrProvider) as RebalanceStrategy;
  }
}
