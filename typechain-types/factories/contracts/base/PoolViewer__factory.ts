/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  PoolViewer,
  PoolViewerInterface,
} from "../../../contracts/base/PoolViewer";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "pool",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "liquidity",
        type: "uint256",
      },
    ],
    name: "calcDynamicOriginationFee",
    outputs: [
      {
        internalType: "uint256",
        name: "origFee",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pool",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "canLiquidate",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pool",
        type: "address",
      },
    ],
    name: "getLatestPoolData",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "poolId",
            type: "address",
          },
          {
            internalType: "uint16",
            name: "protocolId",
            type: "uint16",
          },
          {
            internalType: "address",
            name: "borrowStrategy",
            type: "address",
          },
          {
            internalType: "address",
            name: "repayStrategy",
            type: "address",
          },
          {
            internalType: "address",
            name: "rebalanceStrategy",
            type: "address",
          },
          {
            internalType: "address",
            name: "shortStrategy",
            type: "address",
          },
          {
            internalType: "address",
            name: "singleLiquidationStrategy",
            type: "address",
          },
          {
            internalType: "address",
            name: "batchLiquidationStrategy",
            type: "address",
          },
          {
            internalType: "address",
            name: "factory",
            type: "address",
          },
          {
            internalType: "address",
            name: "paramsStore",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "LP_TOKEN_BALANCE",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "LP_TOKEN_BORROWED",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "LP_TOKEN_BORROWED_PLUS_INTEREST",
            type: "uint256",
          },
          {
            internalType: "uint128",
            name: "BORROWED_INVARIANT",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "LP_INVARIANT",
            type: "uint128",
          },
          {
            internalType: "address",
            name: "cfmm",
            type: "address",
          },
          {
            internalType: "uint80",
            name: "accFeeIndex",
            type: "uint80",
          },
          {
            internalType: "uint8",
            name: "extSwapFee",
            type: "uint8",
          },
          {
            internalType: "uint16",
            name: "origFee",
            type: "uint16",
          },
          {
            internalType: "uint40",
            name: "LAST_BLOCK_NUMBER",
            type: "uint40",
          },
          {
            internalType: "uint64",
            name: "lastCFMMFeeIndex",
            type: "uint64",
          },
          {
            internalType: "uint128",
            name: "lastCFMMInvariant",
            type: "uint128",
          },
          {
            internalType: "uint256",
            name: "lastCFMMTotalSupply",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalSupply",
            type: "uint256",
          },
          {
            internalType: "address[]",
            name: "tokens",
            type: "address[]",
          },
          {
            internalType: "string[]",
            name: "symbols",
            type: "string[]",
          },
          {
            internalType: "string[]",
            name: "names",
            type: "string[]",
          },
          {
            internalType: "uint8[]",
            name: "decimals",
            type: "uint8[]",
          },
          {
            internalType: "uint128[]",
            name: "TOKEN_BALANCE",
            type: "uint128[]",
          },
          {
            internalType: "uint128[]",
            name: "CFMM_RESERVES",
            type: "uint128[]",
          },
          {
            internalType: "uint256",
            name: "lastPrice",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastFeeIndex",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "borrowRate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "utilizationRate",
            type: "uint256",
          },
          {
            internalType: "uint40",
            name: "currBlockNumber",
            type: "uint40",
          },
          {
            internalType: "uint8",
            name: "ltvThreshold",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "liquidationFee",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "supplyRate",
            type: "uint256",
          },
          {
            internalType: "uint40",
            name: "emaUtilRate",
            type: "uint40",
          },
          {
            internalType: "uint8",
            name: "emaMultiplier",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "minUtilRate1",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "minUtilRate2",
            type: "uint8",
          },
          {
            internalType: "uint16",
            name: "feeDivisor",
            type: "uint16",
          },
        ],
        internalType: "struct IGammaPool.PoolData",
        name: "data",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pool",
        type: "address",
      },
    ],
    name: "getLatestRates",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "accFeeIndex",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastCFMMFeeIndex",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastFeeIndex",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "borrowRate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "utilizationRate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastBlockNumber",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "currBlockNumber",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastPrice",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "supplyRate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "BORROWED_INVARIANT",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "LP_INVARIANT",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "emaUtilRate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minUtilRate1",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minUtilRate2",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeDivisor",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "origFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "ltvThreshold",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "liquidationFee",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "shortStrategy",
            type: "address",
          },
          {
            internalType: "address",
            name: "paramsStore",
            type: "address",
          },
        ],
        internalType: "struct IGammaPool.RateData",
        name: "data",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pool",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "start",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "end",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "active",
        type: "bool",
      },
    ],
    name: "getLoans",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "poolId",
            type: "address",
          },
          {
            internalType: "uint96",
            name: "rateIndex",
            type: "uint96",
          },
          {
            internalType: "uint128",
            name: "initLiquidity",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "lastLiquidity",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "liquidity",
            type: "uint128",
          },
          {
            internalType: "uint256",
            name: "collateral",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lpTokens",
            type: "uint256",
          },
          {
            internalType: "uint128[]",
            name: "tokensHeld",
            type: "uint128[]",
          },
          {
            internalType: "address",
            name: "refAddr",
            type: "address",
          },
          {
            internalType: "uint16",
            name: "refFee",
            type: "uint16",
          },
          {
            internalType: "uint8",
            name: "refType",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "px",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "canLiquidate",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "accFeeIndex",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastCFMMFeeIndex",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "LAST_BLOCK_NUMBER",
            type: "uint256",
          },
          {
            internalType: "address[]",
            name: "tokens",
            type: "address[]",
          },
          {
            internalType: "uint8[]",
            name: "decimals",
            type: "uint8[]",
          },
          {
            internalType: "string[]",
            name: "symbols",
            type: "string[]",
          },
          {
            internalType: "string[]",
            name: "names",
            type: "string[]",
          },
          {
            internalType: "address",
            name: "paramsStore",
            type: "address",
          },
          {
            internalType: "address",
            name: "shortStrategy",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "BORROWED_INVARIANT",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "LP_TOKEN_BALANCE",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastCFMMInvariant",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastCFMMTotalSupply",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "ltvThreshold",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "liquidationFee",
            type: "uint256",
          },
        ],
        internalType: "struct IGammaPool.LoanData[]",
        name: "_loans",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pool",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "tokenIds",
        type: "uint256[]",
      },
      {
        internalType: "bool",
        name: "active",
        type: "bool",
      },
    ],
    name: "getLoansById",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "poolId",
            type: "address",
          },
          {
            internalType: "uint96",
            name: "rateIndex",
            type: "uint96",
          },
          {
            internalType: "uint128",
            name: "initLiquidity",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "lastLiquidity",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "liquidity",
            type: "uint128",
          },
          {
            internalType: "uint256",
            name: "collateral",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lpTokens",
            type: "uint256",
          },
          {
            internalType: "uint128[]",
            name: "tokensHeld",
            type: "uint128[]",
          },
          {
            internalType: "address",
            name: "refAddr",
            type: "address",
          },
          {
            internalType: "uint16",
            name: "refFee",
            type: "uint16",
          },
          {
            internalType: "uint8",
            name: "refType",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "px",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "canLiquidate",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "accFeeIndex",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastCFMMFeeIndex",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "LAST_BLOCK_NUMBER",
            type: "uint256",
          },
          {
            internalType: "address[]",
            name: "tokens",
            type: "address[]",
          },
          {
            internalType: "uint8[]",
            name: "decimals",
            type: "uint8[]",
          },
          {
            internalType: "string[]",
            name: "symbols",
            type: "string[]",
          },
          {
            internalType: "string[]",
            name: "names",
            type: "string[]",
          },
          {
            internalType: "address",
            name: "paramsStore",
            type: "address",
          },
          {
            internalType: "address",
            name: "shortStrategy",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "BORROWED_INVARIANT",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "LP_TOKEN_BALANCE",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastCFMMInvariant",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastCFMMTotalSupply",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "ltvThreshold",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "liquidationFee",
            type: "uint256",
          },
        ],
        internalType: "struct IGammaPool.LoanData[]",
        name: "_loans",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pool",
        type: "address",
      },
    ],
    name: "getPoolData",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "poolId",
            type: "address",
          },
          {
            internalType: "uint16",
            name: "protocolId",
            type: "uint16",
          },
          {
            internalType: "address",
            name: "borrowStrategy",
            type: "address",
          },
          {
            internalType: "address",
            name: "repayStrategy",
            type: "address",
          },
          {
            internalType: "address",
            name: "rebalanceStrategy",
            type: "address",
          },
          {
            internalType: "address",
            name: "shortStrategy",
            type: "address",
          },
          {
            internalType: "address",
            name: "singleLiquidationStrategy",
            type: "address",
          },
          {
            internalType: "address",
            name: "batchLiquidationStrategy",
            type: "address",
          },
          {
            internalType: "address",
            name: "factory",
            type: "address",
          },
          {
            internalType: "address",
            name: "paramsStore",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "LP_TOKEN_BALANCE",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "LP_TOKEN_BORROWED",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "LP_TOKEN_BORROWED_PLUS_INTEREST",
            type: "uint256",
          },
          {
            internalType: "uint128",
            name: "BORROWED_INVARIANT",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "LP_INVARIANT",
            type: "uint128",
          },
          {
            internalType: "address",
            name: "cfmm",
            type: "address",
          },
          {
            internalType: "uint80",
            name: "accFeeIndex",
            type: "uint80",
          },
          {
            internalType: "uint8",
            name: "extSwapFee",
            type: "uint8",
          },
          {
            internalType: "uint16",
            name: "origFee",
            type: "uint16",
          },
          {
            internalType: "uint40",
            name: "LAST_BLOCK_NUMBER",
            type: "uint40",
          },
          {
            internalType: "uint64",
            name: "lastCFMMFeeIndex",
            type: "uint64",
          },
          {
            internalType: "uint128",
            name: "lastCFMMInvariant",
            type: "uint128",
          },
          {
            internalType: "uint256",
            name: "lastCFMMTotalSupply",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalSupply",
            type: "uint256",
          },
          {
            internalType: "address[]",
            name: "tokens",
            type: "address[]",
          },
          {
            internalType: "string[]",
            name: "symbols",
            type: "string[]",
          },
          {
            internalType: "string[]",
            name: "names",
            type: "string[]",
          },
          {
            internalType: "uint8[]",
            name: "decimals",
            type: "uint8[]",
          },
          {
            internalType: "uint128[]",
            name: "TOKEN_BALANCE",
            type: "uint128[]",
          },
          {
            internalType: "uint128[]",
            name: "CFMM_RESERVES",
            type: "uint128[]",
          },
          {
            internalType: "uint256",
            name: "lastPrice",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastFeeIndex",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "borrowRate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "utilizationRate",
            type: "uint256",
          },
          {
            internalType: "uint40",
            name: "currBlockNumber",
            type: "uint40",
          },
          {
            internalType: "uint8",
            name: "ltvThreshold",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "liquidationFee",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "supplyRate",
            type: "uint256",
          },
          {
            internalType: "uint40",
            name: "emaUtilRate",
            type: "uint40",
          },
          {
            internalType: "uint8",
            name: "emaMultiplier",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "minUtilRate1",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "minUtilRate2",
            type: "uint8",
          },
          {
            internalType: "uint16",
            name: "feeDivisor",
            type: "uint16",
          },
        ],
        internalType: "struct IGammaPool.PoolData",
        name: "data",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_tokens",
        type: "address[]",
      },
    ],
    name: "getTokensMetaData",
    outputs: [
      {
        internalType: "string[]",
        name: "_symbols",
        type: "string[]",
      },
      {
        internalType: "string[]",
        name: "_names",
        type: "string[]",
      },
      {
        internalType: "uint8[]",
        name: "_decimals",
        type: "uint8[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pool",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "loan",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "poolId",
            type: "address",
          },
          {
            internalType: "uint96",
            name: "rateIndex",
            type: "uint96",
          },
          {
            internalType: "uint128",
            name: "initLiquidity",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "lastLiquidity",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "liquidity",
            type: "uint128",
          },
          {
            internalType: "uint256",
            name: "collateral",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lpTokens",
            type: "uint256",
          },
          {
            internalType: "uint128[]",
            name: "tokensHeld",
            type: "uint128[]",
          },
          {
            internalType: "address",
            name: "refAddr",
            type: "address",
          },
          {
            internalType: "uint16",
            name: "refFee",
            type: "uint16",
          },
          {
            internalType: "uint8",
            name: "refType",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "px",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "canLiquidate",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "accFeeIndex",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastCFMMFeeIndex",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "LAST_BLOCK_NUMBER",
            type: "uint256",
          },
          {
            internalType: "address[]",
            name: "tokens",
            type: "address[]",
          },
          {
            internalType: "uint8[]",
            name: "decimals",
            type: "uint8[]",
          },
          {
            internalType: "string[]",
            name: "symbols",
            type: "string[]",
          },
          {
            internalType: "string[]",
            name: "names",
            type: "string[]",
          },
          {
            internalType: "address",
            name: "paramsStore",
            type: "address",
          },
          {
            internalType: "address",
            name: "shortStrategy",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "BORROWED_INVARIANT",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "LP_TOKEN_BALANCE",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastCFMMInvariant",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastCFMMTotalSupply",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "ltvThreshold",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "liquidationFee",
            type: "uint256",
          },
        ],
        internalType: "struct IGammaPool.LoanData",
        name: "_loanData",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50613623806100206000396000f3fe608060405234801561001057600080fd5b50600436106100835760003560e01c80630fcce5351461008857806313d21cdf146100b3578063185cc751146100d35780634e356001146100f3578063753a43d2146101135780637edd64b6146101335780638d8c240f14610146578063b39ff73614610167578063fc517b581461018a575b600080fd5b61009b610096366004611dff565b61019d565b6040516100aa93929190611f23565b60405180910390f35b6100c66100c1366004611f8f565b610365565b6040516100aa91906120c9565b6100e66100e1366004612471565b6103f5565b6040516100aa91906126b0565b610106610101366004611f8f565b610544565b6040516100aa91906126c3565b6101266101213660046127c0565b6105fa565b6040516100aa919061280a565b61012661014136600461286c565b610691565b610159610154366004612471565b6106c4565b6040519081526020016100aa565b61017a610175366004612471565b610839565b60405190151581526020016100aa565b6100c6610198366004611f8f565b610939565b606080606083516001600160401b038111156101bb576101bb611d0f565b6040519080825280602002602001820160405280156101ee57816020015b60608152602001906001900390816101d95790505b50925083516001600160401b0381111561020a5761020a611d0f565b60405190808252806020026020018201604052801561023d57816020015b60608152602001906001900390816102285790505b50915083516001600160401b0381111561025957610259611d0f565b604051908082528060200260200182016040528015610282578160200160208202803683370190505b50905060005b845181101561035d576102b38582815181106102a6576102a66128fb565b6020026020010151610e0e565b8482815181106102c5576102c56128fb565b60200260200101819052506102f28582815181106102e5576102e56128fb565b6020026020010151610ec6565b838281518110610304576103046128fb565b6020026020010181905250610331858281518110610324576103246128fb565b6020026020010151610f0d565b828281518110610343576103436128fb565b60ff90921660209283029190910190910152600101610288565b509193909250565b61036d6119d9565b816001600160a01b031663fb29238b6040518163ffffffff1660e01b8152600401600060405180830381865afa1580156103ab573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526103d39190810190612bb3565b90506103e381610300015161019d565b50610340830152610320820152919050565b6103fd611b34565b60405163622fe39f60e01b8152600481018390526001600160a01b0384169063622fe39f90602401600060405180830381865afa158015610442573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261046a91908101906131b7565b905061047581610fc4565b816101e00181815250506104a98160c001516001600160801b031682606001516001600160601b0316836101e0015161116e565b6001600160801b031660c082015261018081015160009060ff166003146104d15760006104d8565b8161014001515b90506104eb84848461012001518461119a565b60e0830181905260c0830151610380840151610513926001600160801b039092169190611296565b15156101c083015261024082015161052a9061019d565b6102608501526102a0840152610280830152505b92915050565b61054c611c64565b610555826112d0565b9050438160c0018181525050816001600160a01b03166374aa5fad6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561059f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105c391906131eb565b60e082015260808101516060820151670de0b6b3a7640000916105e59161321a565b6105ef9190613231565b610100820152919050565b60405163af800bf960e01b8152600481018490526024810183905281151560448201526060906001600160a01b0386169063af800bf9906064015b600060405180830381865afa158015610652573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261067a9190810190613253565b905061068685826116f8565b90505b949350505050565b6040516359df61a160e01b81526060906001600160a01b038616906359df61a19061063590879087908790600401613303565b6000806106d0846112d0565b90506000662386f26fc10000610706858461014001516106f09190613341565b868561012001516107019190613354565b6118d2565b6107109190613231565b905060006127108361016001516107279190613231565b9050856001600160a01b031663036079a86040518163ffffffff1660e01b8152600401602060405180830381865afa158015610767573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061078b9190613367565b6101e08401516101808501516101a08601516101c0870151604051633800f60560e11b8152600481019490945260248401879052604484018690526064840192909252608483015260a48201526001600160a01b039190911690637001ec0a9060c401602060405180830381865afa15801561080b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061082f91906131eb565b9695505050505050565b60405163622fe39f60e01b81526004810182905260009081906001600160a01b0385169063622fe39f90602401600060405180830381865afa158015610883573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526108ab91908101906131b7565b905060006108dc8260c001516001600160801b031683606001516001600160601b03166108d785610fc4565b61116e565b6001600160801b03169050600082610180015160ff16600314610900576000610907565b8261014001515b9050600061091c87878661012001518561119a565b905061092e8382866103800151611296565b979650505050505050565b6109416119d9565b61094a82610365565b90506000816101a001516001600160801b03169050600080846001600160a01b031663cd1891876040518163ffffffff1660e01b8152600401600060405180830381865afa1580156109a0573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526109c89190810190613384565b6103a087019290925261026086015190935090915060009081906109f39064ffffffffff1643613341565b11610a0657670de0b6b3a7640000610a52565b670de0b6b3a76400008561028001516001600160401b0316610a3e8686868a6102a001516001600160801b03168b6102c00151611910565b610a48919061321a565b610a529190613231565b60a08601516101208701516101408801516102a08901516102c08a01516102608b015160405163cd9e99b560e01b81526001600160a01b039586166004820152602481018c905260448101949094526001600160801b039092166064840152608483015264ffffffffff1660a482015289821660c482015260e48101849052929350169063cd9e99b59061010401606060405180830381865afa158015610afd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b2191906133d3565b610420880181905261040088018290526103e0880192909252670de0b6b3a764000091610b4d9161321a565b610b579190613231565b6104a08601526001600160401b03811661028086015260a08501516103e086015161014087015160405163ad8d324b60e01b8152600481019290925260248201879052604482015260648101859052608481018490526001600160a01b039091169063ad8d324b9060a401606060405180830381865afa158015610bdf573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c0391906133d3565b6101808801919091526001600160801b0381166101a0880152610140870151909550839150610c3390859061321a565b610c3d9190613231565b6001600160801b03166101c08601526103e0850151610200860151670de0b6b3a764000091610c74916001600160501b031661321a565b610c7e9190613231565b6001600160501b03166102008601526101c08501516101a0860151610caf916001600160801b0390811691166118d2565b856104200181815250508460a001516001600160a01b0316632f92b404866104200151876104c00151610d0189610260015164ffffffffff1643610cf39190613341565b8a6104e0015160ff166119c1565b6040516001600160e01b031960e086901b168152600481019390935264ffffffffff90911660248301526044820152606401602060405180830381865afa158015610d50573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d7491906131eb565b64ffffffffff166104c0860152604080516374aa5fad60e01b815290516001600160a01b038816916374aa5fad9160048083019260209291908290030181865afa158015610dc6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dea91906131eb565b6103c0860152506001600160801b039091166102a08401526102c083015250919050565b60408051600481526024810182526020810180516001600160e01b03166395d89b4160e01b179052905160609160009182916001600160a01b03861691610e559190613401565b600060405180830381855afa9150503d8060008114610e90576040519150601f19603f3d011682016040523d82523d6000602084013e610e95565b606091505b5091509150818015610ea957506001815110155b610eb257600080fd5b80806020019051810190610689919061341d565b60408051600481526024810182526020810180516001600160e01b03166306fdde0360e01b179052905160609160009182916001600160a01b03861691610e559190613401565b60408051600481526024810182526020810180516001600160e01b031663313ce56760e01b1790529051600091829182916001600160a01b03861691610f539190613401565b600060405180830381855afa9150503d8060008114610f8e576040519150601f19603f3d011682016040523d82523d6000602084013e610f93565b606091505b5091509150818015610fa757506001815110155b610fb057600080fd5b808060200190518101906106899190613451565b600080600083604001516001600160a01b031663cd1891876040518163ffffffff1660e01b8152600401600060405180830381865afa15801561100b573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526110339190810190613384565b610220870151919450925060009150819061104e9043613341565b1161106157670de0b6b3a76400006110a0565b670de0b6b3a764000085610200015161108c87610300015186868a61034001518b6103600151611910565b611096919061321a565b6110a09190613231565b90506000856102e001516001600160a01b031663cd9e99b5876102c001518861030001518961032001518a61034001518b61036001518c61022001518d604001518a6040518963ffffffff1660e01b815260040161110598979695949392919061346c565b606060405180830381865afa158015611122573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061114691906133d3565b50509050670de0b6b3a764000081876101e00151611164919061321a565b61082f9190613231565b600082156111905782611181838661321a565b61118b9190613231565b610689565b6000949350505050565b604051631f096d9760e21b81526000906001600160a01b03861690637c25b65c906111c99086906004016134b5565b602060405180830381865afa1580156111e6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061120a91906131eb565b90506001600160a01b0382161561068957604051632c0127e760e11b81526001600160a01b038681166004830152602482018690528316906358024fce90604401602060405180830381865afa158015611268573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061128c91906131eb565b6106869082613354565b6000836127106112a784600a61321a565b6112b390612710613341565b6112bd908661321a565b6112c79190613231565b10949350505050565b6112d8611c64565b6000826001600160a01b0316638a4d39646040518163ffffffff1660e01b815260040161024060405180830381865afa158015611319573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061133d91906134c8565b9050600080846001600160a01b031663cd1891876040518163ffffffff1660e01b8152600401600060405180830381865afa158015611380573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526113a89190810190613384565b60e08601519194509250600091506113c09043613341565b116113d357670de0b6b3a764000061140f565b670de0b6b3a76400008361012001516113fb856060015185858860a001518960c00151611910565b611405919061321a565b61140f9190613231565b60208086018290528451908501516060860151608087015160a088015160c089015160e08a01516040808c0151905163cd9e99b560e01b81526001600160a01b039098169863cd9e99b59861146e98979695949392919060040161346c565b606060405180830381865afa15801561148b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114af91906133d3565b608087810191909152606080880192909252604080880184905286519287015191870151905163ad8d324b60e01b815260048101949094526024840191909152604483015260648201849052608482018390526001600160a01b03169063ad8d324b9060a401606060405180830381865afa158015611532573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061155691906133d3565b61012087015250506080830151819061157090849061321a565b61157a9190613231565b6001600160801b0316610140850181905261012085015161159b91906118d2565b60808501819052835161014085015160e08601516001600160a01b0390921692632f92b404929091906115dd906115d29043613341565b8861016001516119c1565b6040516001600160e01b031960e086901b168152600481019390935260248301919091526044820152606401602060405180830381865afa158015611626573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061164a91906131eb565b64ffffffffff166101608501526101e080840151908501526101c0808401519085015261018080840151908501526101a080840151908501526102008084015190850152610220808401519085015282516001600160a01b039081166102408601526020840151166102608501526040840151610100840151670de0b6b3a7640000916116d69161321a565b6116e09190613231565b8452505060e0015160a08201524360c0820152919050565b60606000836001600160a01b0316639d63848a6040518163ffffffff1660e01b8152600401600060405180830381865afa15801561173a573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261176291908101906135b9565b905060008060006117728461019d565b9250925092506000611783886112d0565b8751909150611790611b34565b60005b828110156118c3578981815181106117ad576117ad6128fb565b602002602001015191508160000151600003156118c357610240820188905261028082018790526102a08201869052610260820185905260c08201516060830151855161180d926001600160801b0316916001600160601b03169061116e565b6001600160801b031660c083015261018082015160009060ff1660031461183557600061183c565b8261014001515b90506118538c84602001518561012001518461119a565b60e084018190526102408601516001600160a01b039081166102e0860152610260870151166102c085015261020086015161038085018190526102208701516103a086015260c08501516118b2926001600160801b0390911691611296565b15156101c084015250600101611793565b50979998505050505050505050565b6000806118df8484613354565b9050806000036118f357600091505061053e565b8061190684670de0b6b3a764000061321a565b6106899190613231565b600080851180156119215750600084115b801561192d5750600083115b80156119395750600082115b156119ad57600083871161194d578361194f565b865b9050600061195d868361321a565b90508061196a8684613341565b611974908861321a565b61197e868a61321a565b6119889190613354565b61199a90670de0b6b3a764000061321a565b6119a49190613231565b925050506119b8565b50670de0b6b3a76400005b95945050505050565b60008183116119d057816119d2565b825b9392505050565b604080516105608101825260008082526020820181905291810182905260608082018390526080820183905260a0820183905260c0820183905260e08201839052610100820183905261012082018390526101408201839052610160820183905261018082018390526101a082018390526101c082018390526101e08201839052610200820183905261022082018390526102408201839052610260820183905261028082018390526102a082018390526102c082018390526102e08201839052610300820181905261032082018190526103408201819052610360820181905261038082018190526103a08201526103c081018290526103e08101829052610400810182905261042081018290526104408101829052610460810182905261048081018290526104a081018290526104c081018290526104e081018290526105008101829052610520810182905261054081019190915290565b604051806103c00160405280600081526020016000815260200160006001600160a01b0316815260200160006001600160601b0316815260200160006001600160801b0316815260200160006001600160801b0316815260200160006001600160801b0316815260200160008152602001600081526020016060815260200160006001600160a01b03168152602001600061ffff168152602001600060ff168152602001600081526020016000151581526020016000815260200160008152602001600081526020016060815260200160608152602001606081526020016060815260200160006001600160a01b0316815260200160006001600160a01b031681526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b60405180610280016040528060008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160006001600160a01b0316815260200160006001600160a01b031681525090565b634e487b7160e01b600052604160045260246000fd5b60405161056081016001600160401b0381118282101715611d4857611d48611d0f565b60405290565b6040516103c081016001600160401b0381118282101715611d4857611d48611d0f565b60405161024081016001600160401b0381118282101715611d4857611d48611d0f565b604051601f8201601f191681016001600160401b0381118282101715611dbc57611dbc611d0f565b604052919050565b60006001600160401b03821115611ddd57611ddd611d0f565b5060051b60200190565b6001600160a01b0381168114611dfc57600080fd5b50565b60006020808385031215611e1257600080fd5b82356001600160401b03811115611e2857600080fd5b8301601f81018513611e3957600080fd5b8035611e4c611e4782611dc4565b611d94565b81815260059190911b82018301908381019087831115611e6b57600080fd5b928401925b8284101561092e578335611e8381611de7565b82529284019290840190611e70565b60005b83811015611ead578181015183820152602001611e95565b50506000910152565b600081518084526020808501808196508360051b8101915082860160005b85811015611f1657828403895281518051808652611ef781888801898501611e92565b99860199601f01601f1916949094018501935090840190600101611ed4565b5091979650505050505050565b606081526000611f366060830186611eb6565b602083820381850152611f498287611eb6565b8481036040860152855180825282870193509082019060005b81811015611f8157845160ff1683529383019391830191600101611f62565b509098975050505050505050565b600060208284031215611fa157600080fd5b81356119d281611de7565b6001600160a01b03169052565b600081518084526020808501945080840160005b83811015611ff25781516001600160a01b031687529582019590820190600101611fcd565b509495945050505050565b600081518084526020808501808196508360051b8101915082860160005b85811015611f165782840389528151805180865261203e81888801898501611e92565b99860199601f01601f191694909401850193509084019060010161201b565b600081518084526020808501945080840160005b83811015611ff257815160ff1687529582019590820190600101612071565b600081518084526020808501945080840160005b83811015611ff25781516001600160801b0316875295820195908201906001016120a4565b602081526120db602082018351611fac565b600060208301516120f2604084018261ffff169052565b5060408301516121056060840182611fac565b5060608301516121186080840182611fac565b50608083015161212b60a0840182611fac565b5060a083015161213e60c0840182611fac565b5060c083015161215160e0840182611fac565b5060e083015161010061216681850183611fac565b840151905061012061217a84820183611fac565b840151905061014061218e84820183611fac565b84015161016084810191909152840151610180808501919091528401516101a08085019190915284015190506101c06121d1818501836001600160801b03169052565b84015190506101e06121ed848201836001600160801b03169052565b840151905061020061220184820183611fac565b840151905061022061221d848201836001600160501b03169052565b84015190506102406122338482018360ff169052565b840151905061026061224a8482018361ffff169052565b84015190506102806122648482018364ffffffffff169052565b84015190506102a0612280848201836001600160401b03169052565b84015190506102c061229c848201836001600160801b03169052565b8401516102e08481019190915284015161030080850191909152840151610560610320808601829052919250906122d7610580860184611fb9565b9250808601519050601f196103408187860301818801526122f88584611ffd565b9450808801519250506103608187860301818801526123178584611ffd565b945080880151925050610380818786030181880152612336858461205d565b9450808801519250506103a08187860301818801526123558584612090565b9450808801519250506103c08187860301818801526123748584612090565b908801516103e088810191909152880151610400808901919091528801516104208089019190915288015161044080890191909152880151909450915061046090506123c88187018364ffffffffff169052565b86015190506104806123de8682018360ff169052565b86015190506104a06123f48682018360ff169052565b8601516104c08681019190915286015190506104e061241b8187018364ffffffffff169052565b86015190506105006124318682018360ff169052565b86015190506105206124478682018360ff169052565b860151905061054061245d8682018360ff169052565b9095015161ffff1693019290925250919050565b6000806040838503121561248457600080fd5b823561248f81611de7565b946020939093013593505050565b60006103c0825184526020830151602085015260408301516124c26040860182611fac565b5060608301516124dd60608601826001600160601b03169052565b5060808301516124f860808601826001600160801b03169052565b5060a083015161251360a08601826001600160801b03169052565b5060c083015161252e60c08601826001600160801b03169052565b5060e083015160e085015261010080840151818601525061012080840151828287015261255d83870182612090565b925050506101408084015161257482870182611fac565b50506101608381015161ffff16908501526101808084015160ff16908501526101a080840151908501526101c0808401511515908501526101e080840151908501526102008084015190850152610220808401519085015261024080840151858303828701526125e48382611fb9565b925050506102608084015185830382870152612600838261205d565b92505050610280808401518583038287015261261c8382611ffd565b925050506102a080840151858303828701526126388382611ffd565b925050506102c08084015161264f82870182611fac565b50506102e08084015161266482870182611fac565b5050610300838101519085015261032080840151908501526103408084015190850152610360808401519085015261038080840151908501526103a09283015192909301919091525090565b6020815260006119d2602083018461249d565b815181526020808301519082015260408083015190820152606080830151908201526080808301519082015260a0808301519082015260c0808301519082015260e08083015190820152610100808301519082015261012080830151908201526101408083015190820152610160808301519082015261018080830151908201526101a080830151908201526101c080830151908201526101e0808301519082015261020080830151908201526102208083015190820152610240808301516102808301919061279582850182611fac565b5050610260808401516127aa82850182611fac565b505092915050565b8015158114611dfc57600080fd5b600080600080608085870312156127d657600080fd5b84356127e181611de7565b9350602085013592506040850135915060608501356127ff816127b2565b939692955090935050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b8281101561285f57603f1988860301845261284d85835161249d565b94509285019290850190600101612831565b5092979650505050505050565b6000806000806060858703121561288257600080fd5b843561288d81611de7565b935060208501356001600160401b03808211156128a957600080fd5b818701915087601f8301126128bd57600080fd5b8135818111156128cc57600080fd5b8860208260051b85010111156128e157600080fd5b60208301955080945050505060408501356127ff816127b2565b634e487b7160e01b600052603260045260246000fd5b805161291c81611de7565b919050565b805161ffff8116811461291c57600080fd5b80516001600160801b038116811461291c57600080fd5b80516001600160501b038116811461291c57600080fd5b805160ff8116811461291c57600080fd5b805164ffffffffff8116811461291c57600080fd5b80516001600160401b038116811461291c57600080fd5b600082601f8301126129af57600080fd5b815160206129bf611e4783611dc4565b82815260059290921b840181019181810190868411156129de57600080fd5b8286015b84811015612a025780516129f581611de7565b83529183019183016129e2565b509695505050505050565b600082601f830112612a1e57600080fd5b81516001600160401b03811115612a3757612a37611d0f565b612a4a601f8201601f1916602001611d94565b818152846020838601011115612a5f57600080fd5b610689826020830160208701611e92565b600082601f830112612a8157600080fd5b81516020612a91611e4783611dc4565b82815260059290921b84018101918181019086841115612ab057600080fd5b8286015b84811015612a025780516001600160401b03811115612ad35760008081fd5b612ae18986838b0101612a0d565b845250918301918301612ab4565b600082601f830112612b0057600080fd5b81516020612b10611e4783611dc4565b82815260059290921b84018101918181019086841115612b2f57600080fd5b8286015b84811015612a0257612b4481612961565b8352918301918301612b33565b600082601f830112612b6257600080fd5b81516020612b72611e4783611dc4565b82815260059290921b84018101918181019086841115612b9157600080fd5b8286015b84811015612a0257612ba681612933565b8352918301918301612b95565b600060208284031215612bc557600080fd5b81516001600160401b0380821115612bdc57600080fd5b908301906105608286031215612bf157600080fd5b612bf9611d25565b612c0283612911565b8152612c1060208401612921565b6020820152612c2160408401612911565b6040820152612c3260608401612911565b6060820152612c4360808401612911565b6080820152612c5460a08401612911565b60a0820152612c6560c08401612911565b60c0820152612c7660e08401612911565b60e0820152610100612c89818501612911565b90820152610120612c9b848201612911565b908201526101408381015190820152610160808401519082015261018080840151908201526101a0612cce818501612933565b908201526101c0612ce0848201612933565b908201526101e0612cf2848201612911565b90820152610200612d0484820161294a565b90820152610220612d16848201612961565b90820152610240612d28848201612921565b90820152610260612d3a848201612972565b90820152610280612d4c848201612987565b908201526102a0612d5e848201612933565b908201526102c083810151908201526102e080840151908201526103008084015183811115612d8c57600080fd5b612d988882870161299e565b8284015250506103208084015183811115612db257600080fd5b612dbe88828701612a70565b8284015250506103408084015183811115612dd857600080fd5b612de488828701612a70565b8284015250506103608084015183811115612dfe57600080fd5b612e0a88828701612aef565b8284015250506103808084015183811115612e2457600080fd5b612e3088828701612b51565b8284015250506103a08084015183811115612e4a57600080fd5b612e5688828701612b51565b91830191909152506103c083810151908201526103e08084015190820152610400808401519082015261042080840151908201526104409150612e9a828401612972565b828201526104609150612eae828401612961565b828201526104809150612ec2828401612961565b828201526104a0915081830151828201526104c09150612ee3828401612972565b828201526104e09150612ef7828401612961565b828201526105009150612f0b828401612961565b828201526105209150612f1f828401612961565b828201526105409150612f33828401612921565b91810191909152949350505050565b80516001600160601b038116811461291c57600080fd5b805161291c816127b2565b60006103c08284031215612f7757600080fd5b612f7f611d4e565b90508151815260208201516020820152612f9b60408301612911565b6040820152612fac60608301612f42565b6060820152612fbd60808301612933565b6080820152612fce60a08301612933565b60a0820152612fdf60c08301612933565b60c082015260e082015160e0820152610100808301518183015250610120808301516001600160401b038082111561301657600080fd5b61302286838701612b51565b838501526101409250613036838601612911565b83850152610160925061304a838601612921565b83850152610180925061305e838601612961565b838501526101a0925082850151838501526101c0925061307f838601612f59565b92840192909252506101e0838101519083015261020080840151908301526102208084015190830152610240808401519091808211156130be57600080fd5b6130ca8683870161299e565b838501526102609250828501519150808211156130e657600080fd5b6130f286838701612aef565b8385015261028092508285015191508082111561310e57600080fd5b61311a86838701612a70565b838501526102a092508285015191508082111561313657600080fd5b5061314385828601612a70565b8284015250506102c0613157818401612911565b908201526102e0613169838201612911565b90820152610300828101519082015261032080830151908201526103408083015190820152610360808301519082015261038080830151908201526103a09182015191810191909152919050565b6000602082840312156131c957600080fd5b81516001600160401b038111156131df57600080fd5b61068984828501612f64565b6000602082840312156131fd57600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b808202811582820484141761053e5761053e613204565b60008261324e57634e487b7160e01b600052601260045260246000fd5b500490565b6000602080838503121561326657600080fd5b82516001600160401b038082111561327d57600080fd5b818501915085601f83011261329157600080fd5b815161329f611e4782611dc4565b81815260059190911b830184019084810190888311156132be57600080fd5b8585015b838110156132f6578051858111156132da5760008081fd5b6132e88b89838a0101612f64565b8452509186019186016132c2565b5098975050505050505050565b6040808252810183905260006001600160fb1b0384111561332357600080fd5b8360051b808660608501379215156020830152500160600192915050565b8181038181111561053e5761053e613204565b8082018082111561053e5761053e613204565b60006020828403121561337957600080fd5b81516119d281611de7565b60008060006060848603121561339957600080fd5b83516001600160401b038111156133af57600080fd5b6133bb86828701612b51565b93505060208401519150604084015190509250925092565b6000806000606084860312156133e857600080fd5b8351925060208401519150604084015190509250925092565b60008251613413818460208701611e92565b9190910192915050565b60006020828403121561342f57600080fd5b81516001600160401b0381111561344557600080fd5b61068984828501612a0d565b60006020828403121561346357600080fd5b6119d282612961565b6001600160a01b039889168152602081019790975260408701959095526060860193909352608085019190915260a084015290921660c082015260e08101919091526101000190565b6020815260006119d26020830184612090565b600061024082840312156134db57600080fd5b6134e3611d71565b6134ec83612911565b81526134fa60208401612911565b602082015261350b60408401612911565b6040820152606083810151908201526080808401519082015260a0808401519082015260c0808401519082015260e08084015190820152610100808401519082015261012080840151908201526101408084015190820152610160808401519082015261018080840151908201526101a080840151908201526101c080840151908201526101e080840151908201526102008084015190820152610220928301519281019290925250919050565b6000602082840312156135cb57600080fd5b81516001600160401b038111156135e157600080fd5b6106898482850161299e56fea26469706673582212202b329ad1845fe96a39ccba23d47228731c6405a4730cbd884541251677bcc46664736f6c63430008130033";

type PoolViewerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PoolViewerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PoolViewer__factory extends ContractFactory {
  constructor(...args: PoolViewerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<PoolViewer> {
    return super.deploy(overrides || {}) as Promise<PoolViewer>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): PoolViewer {
    return super.attach(address) as PoolViewer;
  }
  override connect(signer: Signer): PoolViewer__factory {
    return super.connect(signer) as PoolViewer__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PoolViewerInterface {
    return new utils.Interface(_abi) as PoolViewerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PoolViewer {
    return new Contract(address, _abi, signerOrProvider) as PoolViewer;
  }
}
