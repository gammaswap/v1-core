/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  TestLoanObserver,
  TestLoanObserverInterface,
} from "../../../contracts/test/TestLoanObserver";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_factory",
        type: "address",
      },
      {
        internalType: "uint16",
        name: "_refId",
        type: "uint16",
      },
      {
        internalType: "uint16",
        name: "_refType",
        type: "uint16",
      },
      {
        internalType: "bool",
        name: "validate_",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "factory",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "cfmm",
        type: "address",
      },
      {
        internalType: "uint16",
        name: "protocolId",
        type: "uint16",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "onLoanUpdate",
    outputs: [
      {
        internalType: "uint256",
        name: "collateral",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "refId",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "refType",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "gammaPool",
        type: "address",
      },
    ],
    name: "validate",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60e060405234801561001057600080fd5b5060405161088a38038061088a83398101604081905261002f91610115565b6001600160a01b03841660805261ffff80841660a052821660c05283838361005d63ab90b69160e01b61007b565b50506001805460ff1916921515929092179091555061017e92505050565b6001600160e01b031980821690036100d95760405162461bcd60e51b815260206004820152601c60248201527f4552433136353a20696e76616c696420696e7465726661636520696400000000604482015260640160405180910390fd5b6001600160e01b0319166000908152602081905260409020805460ff19166001179055565b805161ffff8116811461011057600080fd5b919050565b6000806000806080858703121561012b57600080fd5b84516001600160a01b038116811461014257600080fd5b9350610150602086016100fe565b925061015e604086016100fe565b91506060850151801515811461017357600080fd5b939692955090935050565b60805160a05160c0516106d76101b360003960006101460152600061010c01526000818160cd015261026401526106d76000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c806301ffc9a714610067578063207c64fb1461008f578063465a276d146100a7578063c45a0155146100c8578063f4e444a114610107578063fd08b0f314610141575b600080fd5b61007a61007536600461036a565b610168565b60405190151581526020015b60405180910390f35b61007a61009d3660046103ac565b5060015460ff1690565b6100ba6100b5366004610439565b6101a8565b604051908152602001610086565b6100ef7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610086565b61012e7f000000000000000000000000000000000000000000000000000000000000000081565b60405161ffff9091168152602001610086565b61012e7f000000000000000000000000000000000000000000000000000000000000000081565b60006301ffc9a760e01b6001600160e01b0319831614806101a257506001600160e01b0319821660009081526020819052604090205460ff165b92915050565b6000806101b58686610225565b9050336001600160a01b038216146101ff5760405162461bcd60e51b81526020600482015260096024820152682327a92124a22222a760b91b604482015260640160405180910390fd5b6000915060008380602001905181019061021991906105c3565b90505050949350505050565b604080516001600160a01b03841660208083019190915261ffff8416828401528251808303840181526060909201909252805191012060009061028b907f0000000000000000000000000000000000000000000000000000000000000000908490610292565b9392505050565b6040516334b1f0a960e21b815261ffff83166004820152600090610362906001600160a01b0386169063d2c7c2a490602401602060405180830381865afa1580156102e1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103059190610684565b604051603881018790526f5af43d82803e903d91602b57fd5bf3ff60248201526014810191909152733d602d80600a3d3981f3363d3d373d3d3d363d738152605881018490526037600c8201206078820152605560439091012090565b949350505050565b60006020828403121561037c57600080fd5b81356001600160e01b03198116811461028b57600080fd5b6001600160a01b03811681146103a957600080fd5b50565b6000602082840312156103be57600080fd5b813561028b81610394565b634e487b7160e01b600052604160045260246000fd5b60405160e0810167ffffffffffffffff81118282101715610402576104026103c9565b60405290565b604051601f8201601f1916810167ffffffffffffffff81118282101715610431576104316103c9565b604052919050565b6000806000806080858703121561044f57600080fd5b843561045a81610394565b935060208581013561ffff8116811461047257600080fd5b935060408601359250606086013567ffffffffffffffff8082111561049657600080fd5b818801915088601f8301126104aa57600080fd5b8135818111156104bc576104bc6103c9565b6104ce601f8201601f19168501610408565b915080825289848285010111156104e457600080fd5b808484018584013760008482840101525080935050505092959194509250565b80516bffffffffffffffffffffffff8116811461052057600080fd5b919050565b80516001600160801b038116811461052057600080fd5b600082601f83011261054d57600080fd5b8151602067ffffffffffffffff821115610569576105696103c9565b8160051b610578828201610408565b928352848101820192828101908785111561059257600080fd5b83870192505b848310156105b8576105a983610525565b82529183019190830190610598565b979650505050505050565b6000602082840312156105d557600080fd5b815167ffffffffffffffff808211156105ed57600080fd5b9083019060e0828603121561060157600080fd5b6106096103df565b8251815261061960208401610504565b602082015261062a60408401610525565b604082015261063b60608401610525565b60608201526080830151608082015260a08301518281111561065c57600080fd5b6106688782860161053c565b60a08301525060c083015160c082015280935050505092915050565b60006020828403121561069657600080fd5b815161028b8161039456fea26469706673582212204d6c1c7cc1dd105d181803ed033cf3a4047ebfd9ae92d499cd54f90f2a3ea3ae64736f6c63430008130033";

type TestLoanObserverConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TestLoanObserverConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TestLoanObserver__factory extends ContractFactory {
  constructor(...args: TestLoanObserverConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _factory: PromiseOrValue<string>,
    _refId: PromiseOrValue<BigNumberish>,
    _refType: PromiseOrValue<BigNumberish>,
    validate_: PromiseOrValue<boolean>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<TestLoanObserver> {
    return super.deploy(
      _factory,
      _refId,
      _refType,
      validate_,
      overrides || {}
    ) as Promise<TestLoanObserver>;
  }
  override getDeployTransaction(
    _factory: PromiseOrValue<string>,
    _refId: PromiseOrValue<BigNumberish>,
    _refType: PromiseOrValue<BigNumberish>,
    validate_: PromiseOrValue<boolean>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _factory,
      _refId,
      _refType,
      validate_,
      overrides || {}
    );
  }
  override attach(address: string): TestLoanObserver {
    return super.attach(address) as TestLoanObserver;
  }
  override connect(signer: Signer): TestLoanObserver__factory {
    return super.connect(signer) as TestLoanObserver__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestLoanObserverInterface {
    return new utils.Interface(_abi) as TestLoanObserverInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TestLoanObserver {
    return new Contract(address, _abi, signerOrProvider) as TestLoanObserver;
  }
}
