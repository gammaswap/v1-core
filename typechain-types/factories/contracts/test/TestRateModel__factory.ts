/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  TestRateModel,
  TestRateModelInterface,
} from "../../../contracts/test/TestRateModel";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rateParamsStore",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "validateParameters",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506040516101e43803806101e483398101604081905261002f91610054565b600080546001600160a01b0319166001600160a01b0392909216919091179055610084565b60006020828403121561006657600080fd5b81516001600160a01b038116811461007d57600080fd5b9392505050565b610151806100936000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80630e03846f146100465780636974f58e146100705780638da5cb5b14610096575b600080fd5b6000546001600160a01b03165b6040516001600160a01b0390911681526020015b60405180910390f35b61008661007e3660046100a9565b600192915050565b6040519015158152602001610067565b600054610053906001600160a01b031681565b600080602083850312156100bc57600080fd5b823567ffffffffffffffff808211156100d457600080fd5b818501915085601f8301126100e857600080fd5b8135818111156100f757600080fd5b86602082850101111561010957600080fd5b6020929092019691955090935050505056fea264697066735822122024940ed9157a9e3c0d2e7e311f336774a104c0b1ea20edace847dbfdf2d2626d64736f6c63430008130033";

type TestRateModelConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TestRateModelConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TestRateModel__factory extends ContractFactory {
  constructor(...args: TestRateModelConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _owner: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<TestRateModel> {
    return super.deploy(_owner, overrides || {}) as Promise<TestRateModel>;
  }
  override getDeployTransaction(
    _owner: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_owner, overrides || {});
  }
  override attach(address: string): TestRateModel {
    return super.attach(address) as TestRateModel;
  }
  override connect(signer: Signer): TestRateModel__factory {
    return super.connect(signer) as TestRateModel__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestRateModelInterface {
    return new utils.Interface(_abi) as TestRateModelInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TestRateModel {
    return new Contract(address, _abi, signerOrProvider) as TestRateModel;
  }
}
